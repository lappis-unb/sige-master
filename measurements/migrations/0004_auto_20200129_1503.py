# Generated by Django 3.0.2 on 2020-01-29 15:03

import django.contrib.postgres.fields
import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('transductors', '0005_auto_20200129_1503'),
        ('measurements', '0003_realtimemeasurement'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='minutelymeasurement',
            options={'verbose_name': 'Minutely measurement'},
        ),
        migrations.AlterModelOptions(
            name='monthlymeasurement',
            options={'verbose_name': 'Monthly measurement'},
        ),
        migrations.AlterModelOptions(
            name='quarterlymeasurement',
            options={'verbose_name': 'Quartely measurement'},
        ),
        migrations.AlterModelOptions(
            name='realtimemeasurement',
            options={'verbose_name': 'Real time measurement'},
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='active_power_a',
            field=models.FloatField(default=0, verbose_name='Active power at phase A'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='active_power_b',
            field=models.FloatField(default=0, verbose_name='Active power at phase B'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='active_power_c',
            field=models.FloatField(default=0, verbose_name='Active power at phase C'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='apparent_power_a',
            field=models.FloatField(default=0, verbose_name='Apparent power on phase A'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='apparent_power_b',
            field=models.FloatField(default=0, verbose_name='Apparent power on phase B'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='apparent_power_c',
            field=models.FloatField(default=0, verbose_name='Apparent power on phase C'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='collection_time',
            field=models.DateTimeField(verbose_name='Collection time'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='current_a',
            field=models.FloatField(default=0, verbose_name='Current at phase A'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='current_b',
            field=models.FloatField(default=0, verbose_name='Current at phase B'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='current_c',
            field=models.FloatField(default=0, verbose_name='Current at phase C'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='dht_current_a',
            field=models.FloatField(default=0, verbose_name='DHT current on phase A'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='dht_current_b',
            field=models.FloatField(default=0, verbose_name='DHT current on phase B'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='dht_current_c',
            field=models.FloatField(default=0, verbose_name='DHT current on phase C'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='dht_voltage_a',
            field=models.FloatField(default=0, verbose_name='DHT voltage on phase A'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='dht_voltage_b',
            field=models.FloatField(default=0, verbose_name='DHT voltage on phase B'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='dht_voltage_c',
            field=models.FloatField(default=0, verbose_name='DHT voltage on phase C'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='frequency_a',
            field=models.FloatField(default=0, verbose_name='Frequency'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='power_factor_a',
            field=models.FloatField(default=0, verbose_name='Power factor on phase A'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='power_factor_b',
            field=models.FloatField(default=0, verbose_name='Power factor on phase B'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='power_factor_c',
            field=models.FloatField(default=0, verbose_name='Power factor on phase C'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='reactive_power_a',
            field=models.FloatField(default=0, verbose_name='Reactive power phase A'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='reactive_power_b',
            field=models.FloatField(default=0, verbose_name='Reactive power phase B'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='reactive_power_c',
            field=models.FloatField(default=0, verbose_name='Reactive power phase C'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='total_active_power',
            field=models.FloatField(default=0, verbose_name='Total active power'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='total_apparent_power',
            field=models.FloatField(default=0, verbose_name='Total apparent power'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='total_power_factor',
            field=models.FloatField(default=0, verbose_name='Total power factor'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='total_reactive_power',
            field=models.FloatField(default=0, verbose_name='Total reactive power'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='transductor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements_minutelymeasurement', to='transductors.EnergyTransductor', verbose_name='Energy meter'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='voltage_a',
            field=models.FloatField(default=0, verbose_name='Voltage at phase A'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='voltage_b',
            field=models.FloatField(default=0, verbose_name='Voltage at phase B'),
        ),
        migrations.AlterField(
            model_name='minutelymeasurement',
            name='voltage_c',
            field=models.FloatField(default=0, verbose_name='Voltage at phase C'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='active_max_power_list_off_peak_time',
            field=django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.hstore.HStoreField(), default=None, size=None, verbose_name='Active max power list not on peak hours'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='active_max_power_list_peak_time',
            field=django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.hstore.HStoreField(), default=None, size=None, verbose_name='Active max power list on peak hours'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='active_max_power_off_peak_time',
            field=models.FloatField(default=0, verbose_name='Active max power not on peak hours'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='active_max_power_peak_time',
            field=models.FloatField(default=0, verbose_name='Active max power on peak hours'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='capacitive_power_off_peak_time',
            field=models.FloatField(default=0, verbose_name='Capacitive power not on peak hours'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='capacitive_power_peak_time',
            field=models.FloatField(default=0, verbose_name='Capacitive power on peak hours'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='collection_time',
            field=models.DateTimeField(verbose_name='Collection time'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='consumption_off_peak_time',
            field=models.FloatField(default=0, verbose_name='Consumption not on peak hours'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='consumption_peak_time',
            field=models.FloatField(default=0, verbose_name='Consumption on peak hours'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='generated_energy_off_peak_time',
            field=models.FloatField(default=0, verbose_name='Generated energy not on peak hours'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='generated_energy_peak_time',
            field=models.FloatField(default=0, verbose_name='Generated energy on peak hours'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='inductive_power_off_peak_time',
            field=models.FloatField(default=0, verbose_name='Inductive power not on peak hours'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='inductive_power_peak_time',
            field=models.FloatField(default=0, verbose_name='Inductive power on peak hours'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='reactive_max_power_list_off_peak_time',
            field=django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.hstore.HStoreField(), default=None, size=None, verbose_name='Reactive max power list not on peak hours'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='reactive_max_power_list_peak_time',
            field=django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.hstore.HStoreField(), default=None, size=None, verbose_name='Reactive max power list on peak hours'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='reactive_max_power_off_peak_time',
            field=models.FloatField(default=0, verbose_name='Reactive max power not on peak hours'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='reactive_max_power_peak_time',
            field=models.FloatField(default=0, verbose_name='Reactive max power on peak hours'),
        ),
        migrations.AlterField(
            model_name='monthlymeasurement',
            name='transductor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements_monthlymeasurement', to='transductors.EnergyTransductor', verbose_name='Energy meter'),
        ),
        migrations.AlterField(
            model_name='quarterlymeasurement',
            name='capacitive_power_off_peak_time',
            field=models.FloatField(default=0, verbose_name='Capacitive power not on peak hours'),
        ),
        migrations.AlterField(
            model_name='quarterlymeasurement',
            name='capacitive_power_peak_time',
            field=models.FloatField(default=0, verbose_name='Capacitive power on peak hours'),
        ),
        migrations.AlterField(
            model_name='quarterlymeasurement',
            name='collection_time',
            field=models.DateTimeField(verbose_name='Collection time'),
        ),
        migrations.AlterField(
            model_name='quarterlymeasurement',
            name='consumption_off_peak_time',
            field=models.FloatField(default=0, verbose_name='Consumption not on peak hours'),
        ),
        migrations.AlterField(
            model_name='quarterlymeasurement',
            name='consumption_peak_time',
            field=models.FloatField(default=0, verbose_name='Consumption on peak hours'),
        ),
        migrations.AlterField(
            model_name='quarterlymeasurement',
            name='generated_energy_off_peak_time',
            field=models.FloatField(default=0, verbose_name='Generated energy not on peak hours'),
        ),
        migrations.AlterField(
            model_name='quarterlymeasurement',
            name='generated_energy_peak_time',
            field=models.FloatField(default=0, verbose_name='Generated energy on peak hours'),
        ),
        migrations.AlterField(
            model_name='quarterlymeasurement',
            name='inductive_power_off_peak_time',
            field=models.FloatField(default=0, verbose_name='Inductive power not on peak hours'),
        ),
        migrations.AlterField(
            model_name='quarterlymeasurement',
            name='inductive_power_peak_time',
            field=models.FloatField(default=0, verbose_name='Inductive power on peak hours'),
        ),
        migrations.AlterField(
            model_name='quarterlymeasurement',
            name='transductor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements_quarterlymeasurement', to='transductors.EnergyTransductor', verbose_name='Energy meter'),
        ),
        migrations.AlterField(
            model_name='realtimemeasurement',
            name='collection_time',
            field=models.DateTimeField(verbose_name='Collection time'),
        ),
        migrations.AlterField(
            model_name='realtimemeasurement',
            name='current_a',
            field=models.FloatField(default=0, verbose_name='Current on phase A'),
        ),
        migrations.AlterField(
            model_name='realtimemeasurement',
            name='current_b',
            field=models.FloatField(default=0, verbose_name='Current on phase B'),
        ),
        migrations.AlterField(
            model_name='realtimemeasurement',
            name='current_c',
            field=models.FloatField(default=0, verbose_name='Current on phase C'),
        ),
        migrations.AlterField(
            model_name='realtimemeasurement',
            name='total_active_power',
            field=models.FloatField(default=0, verbose_name='Total active power'),
        ),
        migrations.AlterField(
            model_name='realtimemeasurement',
            name='total_power_factor',
            field=models.FloatField(default=0, verbose_name='Total power factor'),
        ),
        migrations.AlterField(
            model_name='realtimemeasurement',
            name='total_reactive_power',
            field=models.FloatField(default=0, verbose_name='Total reactive power'),
        ),
        migrations.AlterField(
            model_name='realtimemeasurement',
            name='transductor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements_realtimemeasurement', to='transductors.EnergyTransductor', verbose_name='Energy meter'),
        ),
        migrations.AlterField(
            model_name='realtimemeasurement',
            name='voltage_a',
            field=models.FloatField(default=0, verbose_name='Voltage on phase A'),
        ),
        migrations.AlterField(
            model_name='realtimemeasurement',
            name='voltage_b',
            field=models.FloatField(default=0, verbose_name='Voltage on phase B'),
        ),
        migrations.AlterField(
            model_name='realtimemeasurement',
            name='voltage_c',
            field=models.FloatField(default=0, verbose_name='Voltage on phase C'),
        ),
    ]
