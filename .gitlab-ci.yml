image: docker:24.0.2

services:
  - docker:dind

stages:
  - build
  - lint
  - test
  - release
  - deploy

variables:
  SERVICE_NAME: master-api
  IMAGE_DB: postgres:15.2-bullseye
  BRANCH_IMAGE: branch-$CI_COMMIT_SHORT_SHA
  DEVELOP_IMAGE: develop-$CI_COMMIT_SHORT_SHA
  RELEASE_IMAGE: release-$CI_COMMIT_SHORT_SHA
  BI_PATH: $CI_REGISTRY_IMAGE:$BRANCH_IMAGE

before_script:
  - docker --version
  - docker compose version
  - echo "$CI_REGISTRY"
  - echo "$CI_REGISTRY_IMAGE"
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY

build:
  stage: build
  script:
    - docker compose build --no-cache
    - docker images
    - docker push $CI_REGISTRY_IMAGE:$BRANCH_IMAGE

style:
  stage: lint
  script:
    - docker run --rm -v $(pwd):/data cytopia/pycodestyle .

test:
  stage: test
  before_script:
    - docker pull $CI_REGISTRY_IMAGE:$BRANCH_IMAGE
    - docker-compose up -d --no-build
    - docker compose exec ${SERVICE_NAME} sh -c "mkdir -p /sige-master/logs/apps /sige-master/logs/tasks"
  script:
    - docker compose exec ${SERVICE_NAME} python manage.py test --verbosity=3
    - docker compose exec ${SERVICE_NAME} coverage run manage.py test
    - docker compose exec ${SERVICE_NAME} coverage report
    - docker compose exec ${SERVICE_NAME} coverage xml -o coverage.xml
  after_script:
    - docker compose down
  dependencies:
    - build

release-image:
  stage: release
  script:
    - docker pull $CI_REGISTRY_IMAGE:$BRANCH_IMAGE
    - docker tag $CI_REGISTRY_IMAGE:$BRANCH_IMAGE $CI_REGISTRY_IMAGE:$RELEASE_IMAGE
    - docker push $CI_REGISTRY_IMAGE:$RELEASE_IMAGE
  dependencies:
    - build
  only:
    - main
  when: manual

deploy:
  stage: deploy
  script:
    - echo "Deployment script not implemented yet!"
    - echo "SSH or Local Gitlab Runner?"
  dependencies:
    - build
  only:
    - main
  when: manual
