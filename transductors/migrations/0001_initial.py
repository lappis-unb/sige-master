# Generated by Django 3.0.2 on 2020-04-09 11:31

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('campi', '0001_initial'),
        ('slaves', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('groups', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EnergyTransductor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='active')),
                ('broken', models.BooleanField(default=False, verbose_name='unreachable')),
                ('name', models.CharField(blank=True, help_text='This field is required', max_length=256, verbose_name='name')),
                ('last_minutely_collection', models.DateTimeField(default=datetime.datetime.now, verbose_name='last minutely collection')),
                ('last_quarterly_collection', models.DateTimeField(default=datetime.datetime.now, verbose_name='last quarterly collection')),
                ('last_monthly_collection', models.DateTimeField(default=datetime.datetime.now, verbose_name='last monthly collection')),
                ('ip_address', models.CharField(default='0.0.0.0', help_text='This field is required', max_length=15, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_ip_address', message='Incorrect IP address format', regex='^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$')], verbose_name='IP address')),
                ('port', models.IntegerField(default=1001, help_text='This field is required', verbose_name='port')),
                ('geolocation_latitude', models.FloatField(blank=True, null=True, verbose_name='latitude')),
                ('geolocation_longitude', models.FloatField(blank=True, null=True, verbose_name='longitude')),
                ('serial_number', models.CharField(help_text='This field is required', max_length=8, unique=True, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='serial number')),
                ('firmware_version', models.CharField(help_text='This field is required', max_length=20, verbose_name='firmware version')),
                ('creation_date', models.DateTimeField(default=datetime.datetime.now, verbose_name='created at')),
                ('model', models.CharField(help_text='This field is required', max_length=256, verbose_name='model')),
                ('id_in_slave', models.IntegerField(blank=True, default=None, null=True)),
                ('history', models.TextField(blank=True, verbose_name='history')),
                ('campus', models.ForeignKey(help_text='This field is required', on_delete=django.db.models.deletion.CASCADE, to='campi.Campus', verbose_name='campus')),
                ('grouping', models.ManyToManyField(blank=True, help_text='This field is required', null=True, to='groups.Group', verbose_name='Grouping')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_transductors.energytransductor_set+', to='contenttypes.ContentType')),
                ('slave_server', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='transductors', to='slaves.Slave', verbose_name='Collection Server')),
            ],
            options={
                'verbose_name': 'Energy meter',
            },
        ),
    ]
