# Generated by Django 5.0.4 on 2024-05-15 18:28

import apps.transductors.utils
import django.db.models.deletion
import django.db.models.expressions
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('locations', '0001_initial'),
        ('organizations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TransductorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('manufacturer', models.CharField(max_length=64)),
                ('protocol', models.IntegerField(choices=[(1, 'Modbus TCP'), (2, 'Modbus UDP'), (3, 'Modbus Serial RTU'), (4, 'TLS')])),
                ('read_function', models.IntegerField(choices=[(1, 'Read Holding Registers'), (2, 'Read Input Registers')])),
                ('modbus_addr_id', models.PositiveSmallIntegerField(blank=True, default=1)),
                ('max_block_size', models.PositiveSmallIntegerField(blank=True, default=100)),
                ('base_address', models.IntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('memory_map_file', models.FileField(upload_to=apps.transductors.utils.upload_directory_path)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'modelo',
                'verbose_name_plural': 'modelos',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Transductor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(protocol='IPv4')),
                ('port', models.PositiveIntegerField(default=502)),
                ('firmware_version', models.CharField(blank=True, max_length=20)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('is_generator', models.BooleanField(default=True)),
                ('installation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('serial_number', models.CharField(blank=True, max_length=16, null=True, unique=True)),
                ('geo_location', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='transductor', to='locations.geographiclocation')),
                ('located', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transductors', to='organizations.entity')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='transductors.transductormodel')),
            ],
            options={
                'verbose_name': 'transductor',
                'verbose_name_plural': 'transductores',
                'ordering': ('model', 'ip_address'),
            },
        ),
        migrations.CreateModel(
            name='StatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Active'), (2, 'Broken'), (3, 'Disabled'), (4, 'Maintenance'), (5, 'Transferred'), (6, 'Other')])),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.GeneratedField(db_persist=True, expression=django.db.models.expressions.CombinedExpression(models.F('end_time'), '-', models.F('start_time')), output_field=models.DurationField())),
                ('transductor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='status_history', to='transductors.transductor')),
            ],
            options={
                'verbose_name': 'transductor status',
                'ordering': ['-start_time'],
            },
        ),
    ]
